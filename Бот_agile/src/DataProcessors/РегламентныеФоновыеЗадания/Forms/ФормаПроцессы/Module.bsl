//PowerTools 
//(с)2006-2020 Александр Окулов 
//https://infostart.ru/profile/6612/
//https://infostart.ru/public/167865/
//aokulov@bk.ru

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// Вставить содержимое обработчика.
	//УстановитьТемуОформления();
	Если НЕ ЗначениеЗаполнено(ПериодНачало) Тогда
	    ПериодНачало = НачалоДня(ТекущаяДата()-7*24*60*60);
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ПериодКонец) Тогда
	    ПериодКонец = КонецДня(ТекущаяДата());
	КонецЕсли;
	
	ОбновитьРеглЗаданияАктивные(Неопределено);
	ОбновитьФоновыеВсе(Неопределено);
	//v1.40
	//ОбновитьФоновыеЗадания(Неопределено)
КонецПроцедуры

&НаСервере
Процедура ОбновитьРегламентныеЗаданияНаСервере(Отбор)
	// Вставить содержимое обработчика.
	ТаблицаРегламентныеЗадания.Очистить();
	Для каждого рз Из РегламентныеЗадания.ПолучитьРегламентныеЗадания(Отбор) Цикл
		стрРЗ = ТаблицаРегламентныеЗадания.Добавить();
		ЗаполнитьЗначенияСвойств(стрРЗ,рз);
		Если НЕ ЗначениеЗаполнено(стрРЗ.Наименование) Тогда
		   стрРЗ.Наименование = рз.Метаданные.Синоним;
		КонецЕсли;
		Если рз.ПоследнееЗадание<>Неопределено Тогда
		    стрРЗ.СостояниеВыполнения = рз.ПоследнееЗадание.Состояние;
			стрРЗ.ДатаОкончания = рз.ПоследнееЗадание.Конец;
			стрРЗ.ДатаНачала = рз.ПоследнееЗадание.Начало;
		КонецЕсли;
	КонецЦикла;
	ТаблицаРегламентныеЗадания.Сортировать("Наименование");
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьРеглЗадания(Команда)
	// Вставить содержимое обработчика.
	ОтборЗаданий = Новый Структура;
	ОбновитьРегламентныеЗаданияНаСервере(ОтборЗаданий);
	элементы.РеглЗаданияВсе.ЦветФона = Новый Цвет(250,204,31);
	элементы.РеглЗаданияАктивные.ЦветФона = Новый Цвет(255,255,255);
	элементы.РеглЗаданияВыключенные.ЦветФона = Новый Цвет(255,255,255);
	ОтключитьОбработчикОжидания("ОбновитьФонЗаданияАктивныеОбработчик");
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьРеглЗаданияАктивные(Команда)
	// Вставить содержимое обработчика.
	ОтборЗаданий = Новый Структура;
	ОтборЗаданий.Вставить("Использование", Истина);
	ОбновитьРегламентныеЗаданияНаСервере(ОтборЗаданий);
	элементы.РеглЗаданияВсе.ЦветФона = Новый Цвет(255,255,255);
	элементы.РеглЗаданияАктивные.ЦветФона = Новый Цвет(250,204,31);
	элементы.РеглЗаданияВыключенные.ЦветФона = Новый Цвет(255,255,255);
	ОтключитьОбработчикОжидания("ОбновитьФонЗаданияАктивныеОбработчик");
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФонЗаданияАктивныеОбработчик() Экспорт
	// Вставить содержимое обработчика.
	ОтборЗаданий = Новый Структура;
	ОтборЗаданий.Вставить("Состояние", "Активно");
	ОтборЗаданий.Вставить("Начало", ПериодНачало);
	ОтборЗаданий.Вставить("Конец",  ПериодКонец);
	ОбновитьФоновыеЗаданияНаСервере(ОтборЗаданий);

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьРеглЗаданияВыкл(Команда)
	// Вставить содержимое обработчика.
	ОтборЗаданий = Новый Структура;
	ОтборЗаданий.Вставить("Использование", Ложь);
	ОбновитьРегламентныеЗаданияНаСервере(ОтборЗаданий);
	элементы.РеглЗаданияВсе.ЦветФона = Новый Цвет(255,255,255);
	элементы.РеглЗаданияАктивные.ЦветФона = Новый Цвет(255,255,255);
	элементы.РеглЗаданияВыключенные.ЦветФона = Новый Цвет(250,204,31);
	ОтключитьОбработчикОжидания("ОбновитьФонЗаданияАктивныеОбработчик");
КонецПроцедуры

&НаСервере
Процедура ОбновитьФоновыеЗаданияНаСервере(Отбор)
	// Вставить содержимое обработчика.
	ТаблицаФоновыеЗадания.Очистить();
	ОтборЗаданий = Новый Структура; 
	Если Отбор.Свойство("Состояние") Тогда
    	ОтборЗаданий.Вставить("Состояние", СостояниеФоновогоЗадания[Отбор.Состояние]);
	КонецЕсли;
	ОтборЗаданий.Вставить("Начало", Отбор.Начало);
	ОтборЗаданий.Вставить("Конец",  Отбор.Конец);
	Если Отбор.Свойство("РегламентноеЗадание") Тогда
	   РеглЗадание = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(Отбор.РегламентноеЗадание);	
	   ОтборЗаданий.Вставить("РегламентноеЗадание",  РеглЗадание);
	КонецЕсли;
	Для каждого фз Из ФоновыеЗадания.ПолучитьФоновыеЗадания(ОтборЗаданий) Цикл
		стрФЗ = ТаблицаФоновыеЗадания.Добавить();
		ЗаполнитьЗначенияСвойств(стрФЗ,фз);
		Если фз.ИнформацияОбОшибке<>Неопределено Тогда
		   стрФЗ.ИнформацияОбОшибке = фз.ИнформацияОбОшибке.Описание;
	    КонецЕсли;
	    Если фз.Наименование="" Тогда
		   стрФЗ.Наименование = СтрРазделить(фз.ИмяМетода,".")[1];
	    КонецЕсли;
	    Если ЗначениеЗаполнено(фз.Начало) И ЗначениеЗаполнено(фз.Конец) Тогда
		    ВремяОперации = фз.Конец - фз.Начало;
			Часов = Цел(ВремяОперации / 3600);
			ВремяОперации = ВремяОперации - (Часов * 3600);
			Минут = Цел(ВремяОперации / 60);
			Секунд = Цел(Цел(ВремяОперации - (Минут * 60)));
			стрФЗ.ВремяВыполнения = Формат(Часов, "ЧЦ=2; ЧН=00; ЧВН=") + ":" + Формат(Минут, "ЧЦ=2; ЧН=00; ЧВН=") + ":" + Формат(Секунд, "ЧЦ=2; ЧН=00; ЧВН=");
		КонецЕсли;
	КонецЦикла;
	ТаблицаФоновыеЗадания.Сортировать("Начало Убыв, Конец Убыв");
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФоновыеВсе(Команда)
	// Вставить содержимое обработчика.
	ОтборЗаданий = Новый Структура;
	ОтборЗаданий.Вставить("Начало", ПериодНачало);
	ОтборЗаданий.Вставить("Конец",  ПериодКонец);
	ОбновитьФоновыеЗаданияНаСервере(ОтборЗаданий);
	Элементы.ФоновыеЗаданияОбновить.ЦветФона = Новый Цвет(255,255,255);
	элементы.ФоновыеЗаданияНезавершенные.ЦветФона = Новый Цвет(255,255,255);
	элементы.ФоновыеЗаданияПрерванные.ЦветФона = Новый Цвет(255,255,255);
	элементы.ФоновыеЗаданияВыполненные.ЦветФона = Новый Цвет(255,255,255);
	элементы.ФоновыеЗаданияВсе.ЦветФона = Новый Цвет(250,204,31);
	ОтключитьОбработчикОжидания("ОбновитьФонЗаданияАктивныеОбработчик");
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФоновыеЗадания(Команда)
	
	ОтборЗаданий = Новый Структура;
	ОтборЗаданий.Вставить("Состояние", "Активно");
	ОтборЗаданий.Вставить("Начало", ПериодНачало);
	ОтборЗаданий.Вставить("Конец",  ПериодКонец);
	ОбновитьФоновыеЗаданияНаСервере(ОтборЗаданий);
	Элементы.ФоновыеЗаданияОбновить.ЦветФона = Новый Цвет(250,204,31);
	элементы.ФоновыеЗаданияНезавершенные.ЦветФона = Новый Цвет(255,255,255);
	элементы.ФоновыеЗаданияПрерванные.ЦветФона = Новый Цвет(255,255,255);
	элементы.ФоновыеЗаданияВыполненные.ЦветФона = Новый Цвет(255,255,255);
	элементы.ФоновыеЗаданияВсе.ЦветФона = Новый Цвет(255,255,255);
	ПодключитьОбработчикОжидания("ОбновитьФонЗаданияАктивныеОбработчик",5,ложь);

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВыполненные(Команда)
	// Вставить содержимое обработчика.
	ОтборЗаданий = Новый Структура;
	ОтборЗаданий.Вставить("Состояние", "Завершено");
	ОтборЗаданий.Вставить("Начало", ПериодНачало);
	ОтборЗаданий.Вставить("Конец",  ПериодКонец);
	ОбновитьФоновыеЗаданияНаСервере(ОтборЗаданий);
	Элементы.ФоновыеЗаданияОбновить.ЦветФона = Новый Цвет(255,255,255);
	элементы.ФоновыеЗаданияНезавершенные.ЦветФона = Новый Цвет(255,255,255);
	элементы.ФоновыеЗаданияПрерванные.ЦветФона = Новый Цвет(255,255,255);
	элементы.ФоновыеЗаданияВыполненные.ЦветФона = Новый Цвет(250,204,31);
	элементы.ФоновыеЗаданияВсе.ЦветФона = Новый Цвет(255,255,255);
	ОтключитьОбработчикОжидания("ОбновитьФонЗаданияАктивныеОбработчик");
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьНезавершенные(Команда)
	// Вставить содержимое обработчика.
	ОтборЗаданий = Новый Структура;
	ОтборЗаданий.Вставить("Состояние", "ЗавершеноАварийно");
	ОтборЗаданий.Вставить("Начало", ПериодНачало);
	ОтборЗаданий.Вставить("Конец",  ПериодКонец);
	ОбновитьФоновыеЗаданияНаСервере(ОтборЗаданий);
	Элементы.ФоновыеЗаданияОбновить.ЦветФона = Новый Цвет(255,255,255);
	элементы.ФоновыеЗаданияНезавершенные.ЦветФона = Новый Цвет(250,204,31);
	элементы.ФоновыеЗаданияПрерванные.ЦветФона = Новый Цвет(255,255,255);
	элементы.ФоновыеЗаданияВыполненные.ЦветФона = Новый Цвет(255,255,255);
	элементы.ФоновыеЗаданияВсе.ЦветФона = Новый Цвет(255,255,255);
	ОтключитьОбработчикОжидания("ОбновитьФонЗаданияАктивныеОбработчик");
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПрерванные(Команда)
	// Вставить содержимое обработчика.
	ОтборЗаданий = Новый Структура;
	ОтборЗаданий.Вставить("Состояние", "Отменено");
	ОтборЗаданий.Вставить("Начало", ПериодНачало);
	ОтборЗаданий.Вставить("Конец",  ПериодКонец);
	ОбновитьФоновыеЗаданияНаСервере(ОтборЗаданий);
	Элементы.ФоновыеЗаданияОбновить.ЦветФона = Новый Цвет(255,255,255);
	элементы.ФоновыеЗаданияНезавершенные.ЦветФона = Новый Цвет(255,255,255);
	элементы.ФоновыеЗаданияПрерванные.ЦветФона = Новый Цвет(250,204,31);
	элементы.ФоновыеЗаданияВыполненные.ЦветФона = Новый Цвет(255,255,255);
	элементы.ФоновыеЗаданияВсе.ЦветФона = Новый Цвет(255,255,255);
	ОтключитьОбработчикОжидания("ОбновитьФонЗаданияАктивныеОбработчик");
КонецПроцедуры

&НаСервере
Процедура ОстановитьФоновыеЗаданияНаСервере(МассивЗаданий)
	// Вставить содержимое обработчика.
	Для каждого Задание Из МассивЗаданий Цикл
		Отбор = Новый Структура("УникальныйИдентификатор",Задание); 
		Для Каждого ФЗ Из ФоновыеЗадания.ПолучитьФоновыеЗадания(Отбор) Цикл
			ФЗ.Отменить();
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОстановитьФоновыеЗадания(Команда)
	Строки = Элементы.ФоновыеЗадания.ВыделенныеСтроки;
	МассивСтрок = Новый Массив();
	Для каждого ИдентификаторСтроки Из Строки Цикл
		ДанныеСтроки = элементы.ФоновыеЗадания.ДанныеСтроки(ИдентификаторСтроки);
		МассивСтрок.Добавить(ДанныеСтроки.УникальныйИдентификатор);  
	КонецЦикла;
	ОстановитьФоновыеЗаданияНаСервере(МассивСтрок);
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьУтилиты(Команда)
	// Вставить содержимое обработчика.
	ОткрытьФорму("ВнешняяОбработка.PowerTools.Форма.ФормаУпр");
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьРедактор(Команда)
	// Вставить содержимое обработчика.
	ОткрытьФорму("ВнешняяОбработка.PowerTools.Форма.ФормаОбр");
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьКонфигурацию(Команда)
	// Вставить содержимое обработчика.
	ОткрытьФорму("ВнешняяОбработка.PowerTools.Форма.ФормаКонф");
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьПроцессы(Команда)
	// Вставить содержимое обработчика.
	ОткрытьФорму("ВнешняяОбработка.PowerTools.Форма.ФормаПроцессы",,,новый УникальныйИдентификатор);
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьОбработку(Команда)
	Режим = РежимДиалогаВопрос.ОКОтмена;
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытьОбработкуНаКлиенте", ЭтотОбъект, Параметры);
	ПоказатьВопрос(Оповещение, НСтр("ru = 'Закрыть все окна PowerTools?';" + " en = 'Close all windows of PowerTools?'"), Режим, 0,КодВозвратаДиалога.ОК,"PowerTools");
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытьОбработкуНаКлиенте(Результат, Параметры)  Экспорт
	Если Результат = КодВозвратаДиалога.Отмена Тогда
        Возврат;
	КонецЕсли;
	окна = ПолучитьОкна();
	Для каждого о Из окна Цикл
		Для каждого ф Из о.Содержимое Цикл
		   Если ф = ЭтаФорма Тогда
		      Продолжить;
		   КонецЕсли;	
		   Если СтрНайти(ф.ИмяФормы,"PowerTools")>0 Тогда
		       ф.Закрыть();
		   КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	ЭтаФорма.Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТемуОформления()
	Элементы.ГруппаЗаголовок.ЦветФона = объект.ТемаЦвет1;
	Элементы.ГруппаРабочая.ЦветФона = объект.ТемаЦвет1;
	
	Элементы.ЗакрытьОбработку.ЦветФона = объект.ТемаЦвет2;
	Элементы.СкрытьПоказатьРеглЗадания.ЦветФона = объект.ТемаЦвет2;
	Элементы.СкрытьПоказатьФонЗадания.ЦветФона = объект.ТемаЦвет2;

	
	Для каждого эл Из Элементы Цикл
		Если Тип(эл)=Тип("ГруппаФормы") И эл.вид = ВидГруппыФормы.Страница Тогда	
			Попытка
				эл.ЦветФона = объект.ТемаЦвет2;
			Исключение
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;

	Если объект.ТемаТаблицыВФоне Тогда
		Для каждого эл Из Элементы Цикл
			Если Тип(эл)=Тип("ТаблицаФормы")  Тогда	
				Попытка
					эл.ЦветФона = объект.ТемаЦвет2;
				   эл.ЧередованиеЦветовСтрок=Ложь;
				Исключение
				КонецПопытки;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МассивПользователей = ПользователиИнформационнойБазы.ПолучитьПользователей();
	
	Для каждого Пользователь Из МассивПользователей Цикл
		Элементы.ТаблицаРегламентныеЗаданияИмяПользователя.СписокВыбора.Добавить(Пользователь.Имя);
	КонецЦикла;
	
	//Вставить содержимое обработчика
	//Значения по умолчанию
	//объект.ТемаЦвет1 = Новый Цвет(255,255,255);
	//объект.ТемаЦвет2 = Новый Цвет(255,255,255);
	//v1.40 Тема - Зима 
	//объект.ТемаЦвет1 = Новый Цвет(100,149,237);
	//объект.ТемаЦвет2 = Новый Цвет(220,235,255);
	//
	//объект.ТемаТаблицыВФоне = Ложь;
	//объект.ТемаЦветБулево = Новый Цвет(100,100,100);
	//объект.ТемаЦветСтрока = Новый Цвет(150,50,0);
	//объект.ТемаЦветЧисло = Новый Цвет(0,0,0);
	//объект.ТемаЦветДата = Новый Цвет(0,128,0);
	//объект.ТемаЦветСсылка = Новый Цвет(0,0,200);
	//объект.ТемаЦветКлючевыеСлова = Новый Цвет(210,76,21);
	//объект.ТемаЦветИдентификаторы = Новый Цвет(37,139,211);
	//объект.ТемаЦветКомментариев = Новый Цвет(147,161,161);
	//объект.ТемаШрифт = Новый Шрифт("Courier New",14,Истина);
	
	лНастройки = ХранилищеОбщихНастроек.Загрузить("PowerTools", "Настройки", "");
	Если ТипЗнч(лНастройки) = Тип("Структура") Тогда
	//	  Если лНастройки.Свойство("ЦветПанелей") Тогда
	//	    объект.ТемаЦвет1 = лНастройки.ЦветПанелей;
	//	  КонецЕсли;
	//	  Если лНастройки.Свойство("ЦветСтраниц") Тогда
	//	    объект.ТемаЦвет2 = лНастройки.ЦветСтраниц;
	//	  КонецЕсли;
	//	  Если лНастройки.Свойство("ТаблицыВФоне") Тогда
	//	    объект.ТемаТаблицыВФоне = лНастройки.ТаблицыВФоне;
	//	  КонецЕсли;
	//	  Если лНастройки.Свойство("ЦветБулево") Тогда
	//	    объект.ТемаЦветБулево = лНастройки.ЦветБулево;
	//	  КонецЕсли;
	//	  Если лНастройки.Свойство("ЦветСтрока") Тогда
	//	    объект.ТемаЦветСтрока = лНастройки.ЦветСтрока;
	//	  КонецЕсли;
	//	  Если лНастройки.Свойство("ЦветЧисло") Тогда
	//	    объект.ТемаЦветЧисло = лНастройки.ЦветЧисло;
	//	  КонецЕсли;
	//	  Если лНастройки.Свойство("ЦветДата") Тогда
	//	    объект.ТемаЦветДата = лНастройки.ЦветДата;
	//	  КонецЕсли;
	//      Если лНастройки.Свойство("ЦветСсылка") Тогда
	//	    объект.ТемаЦветСсылка = лНастройки.ЦветСсылка;
	//	  КонецЕсли;
	//	  Если лНастройки.Свойство("ЦветКлючевыеСлова") Тогда
	//	    объект.ТемаЦветКлючевыеСлова = лНастройки.ЦветКлючевыеСлова;
	//	  КонецЕсли;
	//	  Если лНастройки.Свойство("ЦветИдентификаторы") Тогда
	//	    объект.ТемаЦветИдентификаторы = лНастройки.ЦветИдентификаторы;
	//	  КонецЕсли;
	//	  Если лНастройки.Свойство("ЦветКомментариев") Тогда
	//	    объект.ТемаЦветКомментариев = лНастройки.ЦветКомментариев;
	//	  КонецЕсли;
	//	  Если лНастройки.Свойство("Шрифт") Тогда
	//	    объект.ТемаШрифт = лНастройки.Шрифт;
	//	  КонецЕсли;
		  Если лНастройки.Свойство("АктивныеЗадания") Тогда
			 Если ТипЗнч(лНастройки.АктивныеЗадания) = Тип("Массив") Тогда
			   объект.АктивныеЗадания.ЗагрузитьЗначения(лНастройки.АктивныеЗадания);
			 КонецЕсли; 
		  КонецЕсли;
	  КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	//Вставить содержимое обработчика
	Если НЕ ЗавершениеРаботы Тогда
		ПередЗакрытиемНаСервере(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПередЗакрытиемНаСервере(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	лНастройки = ХранилищеОбщихНастроек.Загрузить("PowerTools", "Настройки", "");
	Если лНастройки = Неопределено Тогда
	   лНастройки = Новый структура;
	КонецЕсли;
	лНастройки.Вставить("СтартоваяФорма","Процессы");
	лНастройки.Вставить("АктивныеЗадания",объект.АктивныеЗадания.ВыгрузитьЗначения());
	ХранилищеОбщихНастроек.Сохранить("PowerTools","Настройки", лНастройки, "");
КонецПроцедуры

&НаКлиенте
Процедура РегламентныеЗаданияПриАктивизацииСтроки(Элемент)
	// Вставить содержимое обработчика.
	ПодключитьОбработчикОжидания("ОбновитьФоновыеЗаданияОбработчикОжидания", 0.1, Истина);
	ОтключитьОбработчикОжидания("ОбновитьФонЗаданияАктивныеОбработчик");
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФоновыеЗаданияОбработчикОжидания() Экспорт
	
	// Вставить содержимое обработчика.
	Если Элементы.РегламентныеЗадания.ТекущиеДанные = Неопределено Тогда
	   Возврат;
	КонецЕсли;
	
	ОтборЗаданий = Новый Структура;
	
	ОтборЗаданий.Вставить("РегламентноеЗадание",Элементы.РегламентныеЗадания.ТекущиеДанные.УникальныйИдентификатор);
	ОтборЗаданий.Вставить("Начало", ПериодНачало);
	ОтборЗаданий.Вставить("Конец",  ПериодКонец);
	ОбновитьФоновыеЗаданияНаСервере(ОтборЗаданий);
	Элементы.ФоновыеЗаданияОбновить.ЦветФона = Новый Цвет(255,255,255);
	элементы.ФоновыеЗаданияНезавершенные.ЦветФона = Новый Цвет(255,255,255);
	элементы.ФоновыеЗаданияПрерванные.ЦветФона = Новый Цвет(255,255,255);
	элементы.ФоновыеЗаданияВыполненные.ЦветФона = Новый Цвет(255,255,255);
	элементы.ФоновыеЗаданияВсе.ЦветФона = Новый Цвет(250,204,31);

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ТаблицаРегламентныеЗаданияИспользованиеПриИзмененииНаСервере(ИДЗадание,Состояние)
	РЗ = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(ИДЗадание);
	Если РЗ <> Неопределено Тогда 
		РЗ.Использование = Состояние;
		РЗ.Записать();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаРегламентныеЗаданияИспользованиеПриИзменении(Элемент)
	ТаблицаРегламентныеЗаданияИспользованиеПриИзмененииНаСервере(Элементы.РегламентныеЗадания.ТекущиеДанные.УникальныйИдентификатор, Элементы.РегламентныеЗадания.ТекущиеДанные.Использование);
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьРасписание(Команда)
	Если Элементы.РегламентныеЗадания.ТекущиеДанные = Неопределено Тогда
	   Возврат;
	КонецЕсли;
	РС = Новый ДиалогРасписанияРегламентногоЗадания(ПолучитьРасписаниеРЗ(Элементы.РегламентныеЗадания.ТекущиеДанные.УникальныйИдентификатор));
	РС.Показать(Новый ОписаниеОповещения("ОбработкаРасписания", ЭтотОбъект));
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьРасписаниеРЗ(ИД)
	РЗ = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(ИД);
	Если РЗ = Неопределено Тогда 
		Возврат Новый РасписаниеРегламентногоЗадания;
	Иначе
		Возврат РЗ.Расписание
	КонецЕсли;
КонецФункции

&НаСервереБезКонтекста
Процедура ИзменитьРасписаниенаСервере(Результат, УИД)
	РЗ = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(УИД);
	Если РЗ <> Неопределено Тогда 
		РЗ.Расписание = Результат;
		РЗ.Записать();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаРасписания(Результат, Параметры) Экспорт

	Если Результат <> Неопределено Тогда
		ИзменитьРасписаниенаСервере(Результат, Элементы.РегламентныеЗадания.ТекущиеДанные.УникальныйИдентификатор);
		Элементы.РегламентныеЗадания.ТекущиеДанные.Расписание = Результат;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СкрытьПоказатьРеглЗадания(Команда)
	// Вставить содержимое обработчика.
	Если Элементы.РегламентныеЗадания.Видимость Тогда
	     Элементы.РегламентныеЗадания.Видимость = Ложь;
		 Элементы.ГруппаКоммандРегл.Видимость = Ложь;
	Иначе	
	     Элементы.РегламентныеЗадания.Видимость = Истина;
		 Элементы.ГруппаКоммандРегл.Видимость = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СкрытьПоказатьФонЗадания(Команда)
	// Вставить содержимое обработчика.
	Если Элементы.ФоновыеЗадания.Видимость Тогда
	     Элементы.ФоновыеЗадания.Видимость = Ложь;
		 Элементы.ГруппаКомманд.Видимость = Ложь;
	Иначе	
	     Элементы.ФоновыеЗадания.Видимость = Истина;
		 Элементы.ГруппаКомманд.Видимость = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВыполнитьЗаданиеНаСервере(ИДЗадание)
	// Вставить содержимое обработчика.
	Задание = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(ИДЗадание);
	Если Задание.ПоследнееЗадание <> Неопределено И Задание.ПоследнееЗадание.Состояние = СостояниеФоновогоЗадания.Активно Тогда
	   Возврат Ложь;	
	КонецЕсли;
	ФоновоеЗадание = ФоновыеЗадания.Выполнить(Задание.Метаданные.ИмяМетода, Задание.Параметры, Строка(Задание.УникальныйИдентификатор), Строка(Задание.Метаданные) + " (запуск вручную)");
	Возврат Истина;
КонецФункции

&НаКлиенте
Процедура ВыполнитьЗадание(Команда)
   Если Элементы.РегламентныеЗадания.ТекущиеДанные = Неопределено Тогда
	   Возврат;
   КонецЕсли;
   Если ВыполнитьЗаданиеНаСервере(Элементы.РегламентныеЗадания.ТекущиеДанные.УникальныйИдентификатор) Тогда
       ПоказатьОповещениеПользователя("Задание запущено"); 
   Иначе
	   ПоказатьОповещениеПользователя("Задание уже выполняется, запуск отменен!");
   КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТаблицаРегламентныеЗаданияИмяПользователяПриИзмененииНаСервере(ИДЗадание,ИмяПользователя,КоличествоПовторов,ИнтервалПовторов)
	// Вставить содержимое обработчика.
	Задание = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(ИДЗадание);
	Задание.ИмяПользователя = ИмяПользователя;
	Задание.КоличествоПовторовПриАварийномЗавершении = КоличествоПовторов;
	Задание.ИнтервалПовтораПриАварийномЗавершении = ИнтервалПовторов;
	Задание.Записать();
	Возврат Истина;
КонецФункции

&НаКлиенте
Процедура ТаблицаРегламентныеЗаданияПараметрыПриИзменении(Элемент)
   Если Элементы.РегламентныеЗадания.ТекущиеДанные = Неопределено Тогда
	   Возврат;
   КонецЕсли;
   ТекДанные = Элементы.РегламентныеЗадания.ТекущиеДанные;
   Если ТаблицаРегламентныеЗаданияИмяПользователяПриИзмененииНаСервере(ТекДанные.УникальныйИдентификатор,ТекДанные.ИмяПользователя,ТекДанные.КоличествоПовторовПриАварийномЗавершении,ТекДанные.ИнтервалПовтораПриАварийномЗавершении) Тогда
       ПоказатьОповещениеПользователя("Свойства записаны"); 
   Иначе
	   ПоказатьОповещениеПользователя("Ошибка записи свойств задания!");
   КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЖурналРегистрации(Команда)
	// Вставить содержимое обработчика.
	Если Элементы.РегламентныеЗадания.ТекущиеДанные = Неопределено Тогда
	   Возврат;
    КонецЕсли;
    ТекущиеДанные = Элементы.РегламентныеЗадания.ТекущиеДанные;
	ф=ПолучитьФорму("ВнешняяОбработка.PowerTools.Форма.ФормаКонф",,,Новый УникальныйИдентификатор);
	ф.Объект.ФильтрИмен="";
	ф.Объект.ФильтрПодсистем="";
	ф.Открыть();
	
	ПараметрыЖурнала = Новый Структура();
	ПараметрыЖурнала.Вставить("ДатаНачала",ТекущиеДанные.ДатаНачала);
	ПараметрыЖурнала.Вставить("ДатаОкончания",ТекущиеДанные.ДатаОкончания+1);
		
	Оповестить("ЖурналВКонфигурации",ПараметрыЖурнала,ф.УникальныйИдентификатор);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЖурналРегистрацииФон(Команда)
	// Вставить содержимое обработчика.
	Если Элементы.ФоновыеЗадания.ТекущиеДанные = Неопределено Тогда
	   Возврат;
    КонецЕсли;
    ТекущиеДанные = Элементы.ФоновыеЗадания.ТекущиеДанные;
	ф=ПолучитьФорму("ВнешняяОбработка.PowerTools.Форма.ФормаКонф",,,Новый УникальныйИдентификатор);
	ф.Объект.ФильтрИмен="";
	ф.Объект.ФильтрПодсистем="";
	ф.Открыть();
	
	ПараметрыЖурнала = Новый Структура();
	ПараметрыЖурнала.Вставить("ДатаНачала",ТекущиеДанные.Начало);
	ПараметрыЖурнала.Вставить("ДатаОкончания",ТекущиеДанные.Конец+1);
	
	Оповестить("ЖурналВКонфигурации",ПараметрыЖурнала,ф.УникальныйИдентификатор);

КонецПроцедуры

&НаКлиенте
Процедура ПериодКонецПриИзменении(Элемент)
	ПериодКонец = КонецДня(ПериодКонец);
	ОбновитьФоновыеЗаданияОбработчикОжидания();
КонецПроцедуры

&НаСервере
Процедура ВыключитьВременноНаСервере()
	
	объект.АктивныеЗадания.Очистить();
	Для каждого з Из ТаблицаРегламентныеЗадания Цикл
	   Если з.Использование Тогда
	      объект.АктивныеЗадания.Добавить(з.УникальныйИдентификатор);
		  з.Использование = Ложь;
		  ТаблицаРегламентныеЗаданияИспользованиеПриИзмененииНаСервере(з.УникальныйИдентификатор,Ложь);
	   КонецЕсли;
	КонецЦикла;
	
	ПередЗакрытиемНаСервере(Неопределено, Неопределено, Неопределено, Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыключитьВременно(Команда)
	ВыключитьВременноНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВключитьНазадНаСервере()
	
	Для каждого з Из объект.АктивныеЗадания Цикл
		АктЗадание = ТаблицаРегламентныеЗадания.НайтиСтроки(Новый Структура("УникальныйИдентификатор",з.Значение));
		Если АктЗадание.Количество() > 0 Тогда
		   АктЗадание[0].Использование = Истина;
		   ТаблицаРегламентныеЗаданияИспользованиеПриИзмененииНаСервере(АктЗадание[0].УникальныйИдентификатор,Истина);	
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВключитьНазад(Команда)
	ОбновитьРеглЗадания(Неопределено);
	ВключитьНазадНаСервере();
	ОбновитьРеглЗаданияАктивные(Неопределено);
	ОбновитьФоновыеВсе(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ПериодНачалоПриИзменении(Элемент)
	ОбновитьФоновыеЗаданияОбработчикОжидания();
КонецПроцедуры




